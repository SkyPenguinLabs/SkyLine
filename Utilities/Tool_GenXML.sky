register(
    "Unique",
    "File",
    "console",
    "io"
)

define PrintFileContents(filename) {
    File.New(filename)
    set Contents := File.Open();
    io.restore()
    println(console.HtmlToAnsi("03fcdb", "") + io.FormatBox(Contents))
}

define init() {
    io.clear()
    println()
	set sym := "";
	sym += console.HtmlToAnsi("03fcdb", "") + " \t \t " + `	 ┏━┓ ` + " \n "
	sym += console.HtmlToAnsi("7b03fc", "") + " \t \t " + `	┃`+console.HtmlToAnsi("03fcdb", "")+`┃ ┃ ` + " \n "
	sym += console.HtmlToAnsi("7b03fc", "") + " \t \t " + `    ━━━━┛ ` 
	println(sym)
	print(
		console.HtmlToAnsi("ffffff", "")
	)
	println("	Sky Line Interpreter| V 0.10.0 " + console.HtmlToAnsi("04fcdb", "(Nightly) \n "))
    set Args := args();
    if (Args.Includes("genxml")) and (Args.Includes("tool")) {
        Args.PopL();
        Args.PopL();
        if Args.Length() == int(2) {
            // now we can call the XML generator
            Unique.GenerateXml(Args[0], int(Args[1]))
            println("[*] Generating XML File: {}".Format(Args[0]))
            PrintFileContents(Args[0])
        } else {
            println("Something went wrong...[{}]".Format(Args))
        }
    }
}

